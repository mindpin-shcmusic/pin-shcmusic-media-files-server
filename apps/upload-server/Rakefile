require 'rubygems'
require 'bundler/setup'

$:.unshift "#{File.dirname(__FILE__)}/lib"
require "upload_server"
require 'resque/tasks'
require "logger"


def get_rails_env
  (ENV['RAILS_ENV'] || 'development')
end

desc "Migrate the database through scripts in db/migrate. Target specific version with VERSION=x"
task :db_migrate do
  config = YAML::load(File.open('config/database.yml'))[get_rails_env]
  ActiveRecord::Base.establish_connection(config)
  ActiveRecord::Base.logger = Logger.new(File.open('log/database.log', 'a'))
  ActiveRecord::Migrator.migrate('db/migrate', ENV["VERSION"] ? ENV["VERSION"].to_i : nil )
end

task :db_create do
  begin
  config = YAML::load(File.open('config/database.yml'))[get_rails_env]
  database = config.delete("database")
  ActiveRecord::Base.establish_connection(config)
  ActiveRecord::Base.logger = Logger.new(File.open('log/database.log', 'a'))
  ActiveRecord::Migration.create_database database, :charset => 'utf8', :collation => 'utf8_unicode_ci'
  rescue Exception=>ex
    if ex.message.match("database exists")
      p "database #{database} is already"
    end
  end
end
 